/**
 * @freesewing/utils | v2.17.0
 * A collection of utilities shared across freesewing projects
 * (c) 2021 Joost De Cock <joost@joost.at> (https://github.com/joostdecock)
 * @license MIT
 */
'use strict';

const optionType = option => {
  if (typeof option === "object") {
    if (typeof option.pct !== "undefined") return "pct";
    if (typeof option.mm !== "undefined") return "mm";
    if (typeof option.deg !== "undefined") return "deg";
    if (typeof option.count !== "undefined") return "count";
    if (typeof option.bool !== "undefined") return "bool";
    if (typeof option.list !== "undefined") return "list";
    return "unknown";
  }

  return "constant";
};

const optionDefault = (name, option, recipe) => {
  let type = optionType(option); // Default from recipe?

  let fromRecipe = false;
  if (recipe && typeof recipe.settings !== 'undefined' && typeof recipe.settings.options !== 'undefined' && typeof recipe.settings.options[name] !== 'undefined') fromRecipe = true;

  switch (type) {
    case 'constant':
      return option;

    case 'list':
      if (fromRecipe) return recipe.settings.options[name];
      return option.dflt;

    default:
      let factor = type === 'pct' ? 100 : 1;
      if (fromRecipe) return Math.round(10 * recipe.settings.options[name] * factor) / 10;else return option[type];
  }
};

module.exports = optionDefault;
//# sourceMappingURL=index.js.map
