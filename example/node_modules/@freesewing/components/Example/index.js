/**
 * @freesewing/components | v2.17.0
 * A collection of React components for FreeSewing web UIs
 * (c) 2021 Joost De Cock <joost@joost.at> (https://github.com/joostdecock)
 * @license MIT
 */
'use strict';

var React = require('react');
var examples = require('@freesewing/examples');
var rendertest = require('@freesewing/rendertest');
var tutorial = require('@freesewing/tutorial');
var i18n = require('@freesewing/i18n');
var IconButton = require('@material-ui/core/IconButton');
var IsolateIcon = require('@material-ui/icons/Search');
var CameraIcon = require('@material-ui/icons/CameraAlt');
var ResetIcon = require('@material-ui/icons/SettingsBackupRestore');
var Switch = require('@material-ui/core/Switch');
var styles = require('@material-ui/core/styles');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var examples__default = /*#__PURE__*/_interopDefaultLegacy(examples);
var rendertest__default = /*#__PURE__*/_interopDefaultLegacy(rendertest);
var tutorial__default = /*#__PURE__*/_interopDefaultLegacy(tutorial);
var IconButton__default = /*#__PURE__*/_interopDefaultLegacy(IconButton);
var IsolateIcon__default = /*#__PURE__*/_interopDefaultLegacy(IsolateIcon);
var CameraIcon__default = /*#__PURE__*/_interopDefaultLegacy(CameraIcon);
var ResetIcon__default = /*#__PURE__*/_interopDefaultLegacy(ResetIcon);
var Switch__default = /*#__PURE__*/_interopDefaultLegacy(Switch);

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);

    if (enumerableOnly) {
      symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }

    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit(arr, i) {
  var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]);

  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;

  var _s, _e;

  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

  return arr2;
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _createForOfIteratorHelper(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];

  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;

      var F = function () {};

      return {
        s: F,
        n: function () {
          if (i >= o.length) return {
            done: true
          };
          return {
            done: false,
            value: o[i++]
          };
        },
        e: function (e) {
          throw e;
        },
        f: F
      };
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  var normalCompletion = true,
      didErr = false,
      err;
  return {
    s: function () {
      it = it.call(o);
    },
    n: function () {
      var step = it.next();
      normalCompletion = step.done;
      return step;
    },
    e: function (e) {
      didErr = true;
      err = e;
    },
    f: function () {
      try {
        if (!normalCompletion && it.return != null) it.return();
      } finally {
        if (didErr) throw err;
      }
    }
  };
}

var Svg = function Svg(_ref) {
  var _ref$embed = _ref.embed,
      embed = _ref$embed === void 0 ? true : _ref$embed,
      _ref$design = _ref.design,
      design = _ref$design === void 0 ? false : _ref$design,
      _ref$language = _ref.language,
      language = _ref$language === void 0 ? 'en' : _ref$language,
      _ref$className = _ref.className,
      className = _ref$className === void 0 ? 'freesewing draft' : _ref$className,
      _ref$style = _ref.style,
      style = _ref$style === void 0 ? {} : _ref$style,
      _ref$viewBox = _ref.viewBox,
      viewBox = _ref$viewBox === void 0 ? false : _ref$viewBox,
      width = _ref.width,
      height = _ref.height,
      children = _ref.children;
  var attributes = {
    xmlns: 'http://www.w3.org/2000/svg',
    'xmlns:svg': 'http://www.w3.org/2000/svg',
    xmlnsXlink: 'http://www.w3.org/1999/xlink',
    xmlLang: language,
    viewBox: viewBox || "0 0 ".concat(width, " ").concat(height),
    className: className,
    style: style
  };

  if (!embed) {
    attributes.width = width + 'mm';
    attributes.height = height + 'mm';
  }

  if (design) attributes.className += ' design';
  return /*#__PURE__*/React__default['default'].createElement("svg", attributes, children);
};

var style = " style=\"fill: none; stroke: currentColor;\" ";
var grids = {
  imperial: "\n      <pattern id=\"grid\" height=\"25.4\" width=\"25.4\" patternUnits=\"userSpaceOnUse\" key=\"grid\">\n        <path class=\"gridline lg imperial\" d=\"M 0 0 L 0 25.4 L 25.4 25.4\" ".concat(style, " />\n        <path\n          class=\"gridline lg imperial\"\n          d=\"M 12.7 0 L 12.7 25.4 M 0 12.7 L 25.4 12.7\"\n          ").concat(style, "\n        />\n        <path\n          class=\"gridline sm imperial\"\n          d=\"M 3.175 0 L 3.175 25.4 M 6.32 0 L 6.35 25.4 M 9.525 0 L 9.525 25.4 M 15.875 0 L 15.875 25.4 M 19.05 0 L 19.05 25.4 M 22.225 0 L 22.225 25.4\"\n          ").concat(style, "\n        />\n        <path\n          class=\"gridline sm imperial\"\n          d=\"M 0 3.175 L 25.4 3.175 M 0 6.32 L 25.4 6.35 M 0 9.525 L 25.4 9.525 M 0 15.875 L 25.4 15.875 M 0 19.05 L 25.4 19.05 M 0 22.225 L 25.4 22.225\"\n          ").concat(style, "\n        />\n      </pattern>\n      "),
  metric: "\n      <pattern id=\"grid\" height=\"100\" width=\"100\" patternUnits=\"userSpaceOnUse\" key=\"grid\">\n        <path class=\"gridline lg metric\" d=\"M 0 0 L 0 100 L 100 100\" ".concat(style, " />\n        <path class=\"gridline metric\" d=\"M 50 0 L 50 100 M 0 50 L 100 50\" ").concat(style, " />\n        <path\n          class=\"gridline sm metric\"\n          d=\"M 10 0 L 10 100 M 20 0 L 20 100 M 30 0 L 30 100 M 40 0 L 40 100 M 60 0 L 60 100 M 70 0 L 70 100 M 80 0 L 80 100 M 90 0 L 90 100\"\n          ").concat(style, "\n        />\n        <path\n          class=\"gridline sm metric\"\n          d=\"M 0 10 L 100 10 M 0 20 L 100 20 M 0 30 L 100 30 M 0 40 L 100 40 M 0 60 L 100 60 M 0 70 L 100 70 M 0 80 L 100 80 M 0 90 L 100 90\"\n          ").concat(style, "\n        />\n        <path\n          class=\"gridline xs metric\"\n          d=\"M 5 0 L 5 100 M 15 0 L 15 100 M 25 0 L 25 100 M 35 0 L 35 100 M 45 0 L 45 100 M 55 0 L 55 100 M 65 0 L 65 100 M 75 0 L 75 100 M 85 0 L 85 100 M 95 0 L 95 100\"\n          ").concat(style, "\n        />\n        <path\n          class=\"gridline xs metric\"\n          d=\"M 0 5 L 100 5 M 0 15 L 100 15 M 0 25 L 100 25 M 0 35 L 100 35 M 0 45 L 100 45 M 0 55 L 100 55 M 0 65 L 100 65 M 0 75 L 100 75 M 0 85 L 100 85 M 0 95 L 100 95\"\n          ").concat(style, "\n        />\n      </pattern>\n  ")
};

var Defs = function Defs(props) {
  var defs = props.svg.defs;

  if (props.settings.paperless) {
    defs += grids[props.settings.units || 'metric'];

    for (var p in props.parts) {
      var anchor = {
        x: 0,
        y: 0
      };
      if (typeof props.parts[p].points.gridAnchor !== 'undefined') anchor = props.parts[p].points.gridAnchor;else if (typeof props.parts[p].points.anchor !== 'undefined') anchor = props.parts[p].points.anchor;
      defs += "<pattern id=\"grid-".concat(p, "\" key=\"grid-").concat(p, "\" xlink:href=\"#grid\" x=\"").concat(anchor.x, "\" y=\"").concat(anchor.y, "\" />");
    }
  }

  return /*#__PURE__*/React__default['default'].createElement("defs", {
    dangerouslySetInnerHTML: {
      __html: defs
    }
  });
};

var TextOnPath = function TextOnPath(props) {

  var translated = '';

  var _iterator = _createForOfIteratorHelper(props.path.attributes.getAsArray('data-text')),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var string = _step.value;
      if (i18n.strings[props.language]['plugin.' + string]) translated += i18n.strings[props.language]['plugin.' + string];else translated += string.toString().replace(/&quot;/g, '"');
      translated += ' ';
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  var textPathProps = {
    xlinkHref: '#' + props.pathId,
    startOffset: '0%'
  };
  var align = props.path.attributes.get('data-text-class');
  if (align && align.indexOf('center') > -1) textPathProps.startOffset = '50%';else if (align && align.indexOf('right') > -1) textPathProps.startOffset = '100%';
  return /*#__PURE__*/React__default['default'].createElement("text", null, /*#__PURE__*/React__default['default'].createElement("textPath", textPathProps, /*#__PURE__*/React__default['default'].createElement("tspan", props.path.attributes.asPropsIfPrefixIs('data-text-'), translated)));
};

var DesignPath = function DesignPath(props) {
  var output = [];
  var i = 0;
  var from = null;

  var _iterator = _createForOfIteratorHelper(props.path.ops),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var op = _step.value;
      var key = props.part + props.name + i;

      if (op.type === 'curve') {
        output.push( /*#__PURE__*/React__default['default'].createElement("path", {
          key: key + 'cp1',
          d: "M ".concat(from.x, ",").concat(from.y, " L ").concat(op.cp1.x, ",").concat(op.cp1.y),
          className: "design path cp"
        }));
        i++;
        output.push( /*#__PURE__*/React__default['default'].createElement("path", {
          key: key + 'cp2',
          d: "M ".concat(op.to.x, ",").concat(op.to.y, " L ").concat(op.cp2.x, ",").concat(op.cp2.y),
          className: "design path cp"
        }));
        i++;
        output.push( /*#__PURE__*/React__default['default'].createElement("circle", {
          key: key + 'cpcirc1',
          cx: op.cp1.x,
          cy: op.cp1.y,
          r: 3.5,
          className: "design path cp"
        }));
        i++;
        output.push( /*#__PURE__*/React__default['default'].createElement("circle", {
          key: key + 'cpcirc2',
          cx: op.cp2.x,
          cy: op.cp2.y,
          r: 3.5,
          className: "design path cp"
        }));
        from = op.to;
      } else if (op.type !== 'close') from = op.to;
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  output.push( /*#__PURE__*/React__default['default'].createElement("path", {
    key: props.part + props.name + 'dpath',
    d: props.path.asPathstring(),
    onClick: function onClick() {
      return props.raiseEvent('path', {
        path: props.path,
        name: props.name,
        part: props.part
      });
    },
    className: "design hovertrap"
  }));
  return output;
};

var getProps = function getProps(obj) {
  /** I can't believe it but there seems to be no method on NPM todo this */
  var cssKey = function cssKey(key) {
    var chunks = key.split('-');

    if (chunks.length > 1) {
      key = chunks.shift();

      var _iterator = _createForOfIteratorHelper(chunks),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var s = _step.value;
          key += s.charAt(0).toUpperCase() + s.slice(1);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }

    return key;
  };

  var convert = function convert(css) {
    var style = {};
    var rules = css.split(';');

    var _iterator2 = _createForOfIteratorHelper(rules),
        _step2;

    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var rule = _step2.value;
        var chunks = rule.split(':');
        if (chunks.length === 2) style[cssKey(chunks[0].trim())] = chunks[1].trim();
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }

    return style;
  };

  var rename = {
    "class": 'className',
    'marker-start': 'markerStart',
    'marker-end': 'markerEnd'
  };
  var props = {};

  for (var key in obj.attributes.list) {
    if (key === 'style') props[key] = convert(obj.attributes.get(key));
    if (Object.keys(rename).indexOf(key) !== -1) props[rename[key]] = obj.attributes.get(key);else if (key !== 'style') props[key] = obj.attributes.get(key);
  }

  return props;
};

var Path = function Path(props) {
  if (!props.path.render) return null;
  var output = [];
  var pathId = 'path-' + props.part + '-' + props.name;
  if (props.design) output.push( /*#__PURE__*/React__default['default'].createElement(DesignPath, _extends({}, props, {
    key: 'dpa-' + props.name
  })));
  output.push( /*#__PURE__*/React__default['default'].createElement("path", _extends({
    id: pathId,
    key: pathId,
    d: props.path.asPathstring()
  }, getProps(props.path))));
  if (props.path.attributes.get('data-text')) output.push( /*#__PURE__*/React__default['default'].createElement(TextOnPath, _extends({
    key: 'text-on-path-' + props.name,
    pathId: pathId
  }, props)));
  return output;
};

var DesignPoint = function DesignPoint(props) {
  return /*#__PURE__*/React__default['default'].createElement("g", {
    className: props.className
  }, /*#__PURE__*/React__default['default'].createElement("circle", {
    cx: props.point.x,
    cy: props.point.y,
    r: "2",
    className: "center"
  }), /*#__PURE__*/React__default['default'].createElement("circle", {
    cx: props.point.x,
    cy: props.point.y,
    r: "7.5",
    className: "hovertrap",
    onClick: function onClick() {
      return props.raiseEvent('point', {
        point: props.point,
        name: props.name,
        part: props.part
      });
    }
  }));
};

var Text = function Text(props) {
  var text = []; // Handle translation

  var translated = '';

  var _iterator = _createForOfIteratorHelper(props.point.attributes.getAsArray('data-text')),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var string = _step.value;
      if (i18n.strings[props.language]['plugin.' + string]) translated += i18n.strings[props.language]['plugin.' + string];else translated += string.toString().replace(/&quot;/g, '"');
      translated += ' ';
    } // Handle muti-line text

  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  if (translated.indexOf('\n') !== -1) {
    var key = 0;
    var lines = translated.split('\n');
    text.push( /*#__PURE__*/React__default['default'].createElement("tspan", {
      key: 'tspan-' + key
    }, lines.shift()));

    var _iterator2 = _createForOfIteratorHelper(lines),
        _step2;

    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var line = _step2.value;
        key++;
        text.push( /*#__PURE__*/React__default['default'].createElement("tspan", {
          key: 'tspan-' + key,
          x: props.point.x,
          dy: props.point.attributes.get('data-text-lineheight') || 12
        }, line.toString().replace(/&quot;/g, '"')));
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
  } else text.push( /*#__PURE__*/React__default['default'].createElement("tspan", {
    key: "tspan-1"
  }, translated));

  return /*#__PURE__*/React__default['default'].createElement("text", _extends({
    x: props.point.x,
    y: props.point.y
  }, props.point.attributes.asPropsIfPrefixIs('data-text-')), text);
};

var Circle = function Circle(props) {
  return /*#__PURE__*/React__default['default'].createElement("circle", _extends({
    cx: props.point.x,
    cy: props.point.y,
    r: props.point.attributes.get('data-circle')
  }, props.point.attributes.asPropsIfPrefixIs('data-circle-')));
};

var Point = function Point(props) {
  var output = [];
  if (props.design) output.push( /*#__PURE__*/React__default['default'].createElement(DesignPoint, _extends({}, props, {
    key: 'dp-' + props.name,
    className: "design point"
  })));
  if (props.point.attributes && props.point.attributes.get('data-text')) output.push( /*#__PURE__*/React__default['default'].createElement(Text, _extends({}, props, {
    key: 'point-' + props.name
  })));
  if (props.point.attributes && props.point.attributes.get('data-circle')) output.push( /*#__PURE__*/React__default['default'].createElement(Circle, {
    point: props.point,
    key: 'circle-' + props.name
  }));
  return output.length < 1 ? null : output;
};

var Snippet = function Snippet(props) {
  var snippetProps = {
    xlinkHref: '#' + props.snippet.def,
    x: props.snippet.anchor.x,
    y: props.snippet.anchor.y
  };
  var scale = props.snippet.attributes.get('data-scale');
  var rotate = props.snippet.attributes.get('data-rotate');

  if (scale || rotate) {
    snippetProps.transform = '';

    if (scale) {
      snippetProps.transform += "translate(".concat(snippetProps.x, ", ").concat(snippetProps.y, ") ");
      snippetProps.transform += "scale(".concat(scale, ") ");
      snippetProps.transform += "translate(".concat(snippetProps.x * -1, ", ").concat(snippetProps.y * -1, ") ");
    }

    if (rotate) {
      snippetProps.transform += "rotate(".concat(rotate, ", ").concat(snippetProps.x, ", ").concat(snippetProps.y, ") ");
    }
  }

  return /*#__PURE__*/React__default['default'].createElement("use", _extends({}, snippetProps, getProps(props.snippet)));
};

var Part = function Part(props) {
  var focusPoint = function focusPoint(point, i) {
    var p = props.part.points[point];
    var pathString = "M ".concat(p.x, " ").concat(props.part.topLeft.y, " ");
    pathString += "L ".concat(p.x, " ").concat(props.part.bottomRight.y, " ");
    pathString += "M ".concat(props.part.topLeft.x, " ").concat(p.y, " ");
    pathString += "L ".concat(props.part.bottomRight.x, " ").concat(p.y, " ");
    var classes = 'focus point c' + i % 4; // Cycle through 4 CSS classes

    return /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, {
      key: 'fp' + point
    }, /*#__PURE__*/React__default['default'].createElement("path", {
      d: pathString,
      className: classes
    }), /*#__PURE__*/React__default['default'].createElement("circle", {
      cx: p.x,
      cy: p.y,
      r: "5",
      className: classes,
      onClick: function onClick() {
        return props.raiseEvent('clearFocus', {
          part: props.name,
          type: 'points',
          name: point
        });
      }
    }));
  };

  var focusCoords = function focusCoords(p, i) {
    var pathString = "M ".concat(p.x, " ").concat(props.part.topLeft.y, " ");
    pathString += "L ".concat(p.x, " ").concat(props.part.bottomRight.y, " ");
    pathString += "M ".concat(props.part.topLeft.x, " ").concat(p.y, " ");
    pathString += "L ".concat(props.part.bottomRight.x, " ").concat(p.y, " ");
    var classes = 'focus coords c' + i % 4; // Cycle through 4 CSS classes

    return /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, {
      key: 'cp' + i
    }, /*#__PURE__*/React__default['default'].createElement("path", {
      d: pathString,
      className: classes
    }), /*#__PURE__*/React__default['default'].createElement("circle", {
      cx: p.x,
      cy: p.y,
      r: "5",
      className: classes,
      onClick: function onClick() {
        return props.raiseEvent('clearFocus', {
          part: props.name,
          type: 'coords',
          data: p
        });
      }
    }));
  };

  var grid = props.paperless ? /*#__PURE__*/React__default['default'].createElement("rect", {
    x: props.part.topLeft.x,
    y: props.part.topLeft.y,
    width: props.part.width,
    height: props.part.height,
    className: "grid",
    fill: 'url(#grid-' + props.name + ')'
  }) : null;
  var focus = [];

  if (props.design) {
    if (props.focus && typeof props.focus[props.name] !== 'undefined') {
      for (var i in props.focus[props.name].points) {
        focus.push(focusPoint(props.focus[props.name].points[i], i));
      }

      var _loop = function _loop(_i) {
        var name = props.focus[props.name].paths[_i];
        focus.push( /*#__PURE__*/React__default['default'].createElement("path", {
          key: 'fpa-' + name,
          d: props.part.paths[name].asPathstring(),
          className: 'focus path c' + _i % 4,
          onClick: function onClick() {
            return props.raiseEvent('clearFocus', {
              part: props.name,
              type: 'paths',
              name: name
            });
          }
        }));
      };

      for (var _i in props.focus[props.name].paths) {
        _loop(_i);
      }

      for (var _i2 in props.focus[props.name].coords) {
        focus.push(focusCoords(props.focus[props.name].coords[_i2], _i2));
      }
    }
  }

  return /*#__PURE__*/React__default['default'].createElement("g", _extends({}, getProps(props.part), {
    id: "part-".concat(props.name)
  }), grid, Object.keys(props.part.paths).map(function (name) {
    return /*#__PURE__*/React__default['default'].createElement(Path, {
      key: name,
      name: name,
      part: props.name,
      language: props.language,
      path: props.part.paths[name],
      focus: props.focus,
      topLeft: props.part.topLeft,
      bottomRight: props.part.bottomRight,
      design: props.design,
      raiseEvent: props.raiseEvent
    });
  }), Object.keys(props.part.points).map(function (name) {
    return /*#__PURE__*/React__default['default'].createElement(Point, {
      key: name,
      name: name,
      part: props.name,
      language: props.language,
      point: props.part.points[name],
      focus: props.focus,
      topLeft: props.part.topLeft,
      bottomRight: props.part.bottomRight,
      design: props.design,
      raiseEvent: props.raiseEvent
    });
  }), Object.keys(props.part.snippets).map(function (name) {
    return /*#__PURE__*/React__default['default'].createElement(Snippet, {
      key: name,
      name: name,
      snippet: props.part.snippets[name]
    });
  }), focus);
};

var Draft = function Draft(props) {
  return /*#__PURE__*/React__default['default'].createElement(Svg, {
    embed: props.settings.embed,
    width: props.width,
    height: props.height,
    language: props.settings.locale,
    id: props.settings.idPrefix + 'svg',
    design: props.design || false,
    style: props.style || {},
    viewBox: props.viewBox,
    className: props.className || 'freesewing draft'
  }, /*#__PURE__*/React__default['default'].createElement(Defs, props), /*#__PURE__*/React__default['default'].createElement("g", null, Object.keys(props.parts).map(function (name) {
    return /*#__PURE__*/React__default['default'].createElement(Part, {
      part: props.parts[name],
      language: props.settings.locale,
      paperless: props.settings.paperless,
      units: props.settings.units,
      key: name,
      name: name,
      focus: props.focus || false,
      design: props.design || false,
      raiseEvent: props.raiseEvent
    });
  })));
};

var Design = function Design(props) {
  // Methods
  var renderAttributes = function renderAttributes(attr) {
    var list = [];

    for (var a in attr.list) {
      list.push( /*#__PURE__*/React__default['default'].createElement("li", {
        key: a
      }, /*#__PURE__*/React__default['default'].createElement("b", null, a), ": ", renderAttributeValue(attr.list[a])));
    }

    return /*#__PURE__*/React__default['default'].createElement("ul", null, list);
  };

  var renderAttributeValue = function renderAttributeValue(val) {
    if (Array.isArray(val)) {
      if (val.length === 1) return val.pop();
      var list = [];

      var _iterator = _createForOfIteratorHelper(val),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var v = _step.value;
          list.push( /*#__PURE__*/React__default['default'].createElement("li", {
            key: v
          }, v));
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      return /*#__PURE__*/React__default['default'].createElement("ul", null, list);
    }

    return val;
  };

  var round = function round(val) {
    return Math.round(val * 10) / 10;
  };

  if (!props.design || props.focus === null || Object.keys(props.focus).length < 1) return null;
  var info = [];

  var _loop = function _loop() {
    var part = _Object$keys[_i];
    var points = [];
    var paths = [];

    var _loop2 = function _loop2(i) {
      var name = props.focus[part].paths[i];
      var path = props.parts[part].paths[name];
      paths.push( /*#__PURE__*/React__default['default'].createElement("li", {
        key: 'patitle-' + name,
        className: 'path c' + i % 4
      }, "path.", /*#__PURE__*/React__default['default'].createElement("b", null, name), /*#__PURE__*/React__default['default'].createElement(IconButton__default['default'], {
        size: "small",
        onClick: function onClick() {
          return console.log("parts.".concat(part, ".paths.").concat(name, ":"), path);
        }
      }, /*#__PURE__*/React__default['default'].createElement(CameraIcon__default['default'], null)), path.attributes.length > 0 && /*#__PURE__*/React__default['default'].createElement("ul", {
        key: 'ops-' + name
      }, /*#__PURE__*/React__default['default'].createElement("li", null, /*#__PURE__*/React__default['default'].createElement("b", null, "attributes"), ": ", renderAttributes(path.attributes)))));
    };

    for (var i in props.focus[part].paths) {
      _loop2(i);
    }

    var _loop3 = function _loop3(_i2) {
      var name = props.focus[part].points[_i2];
      var point = props.parts[part].points[name];
      points.push( /*#__PURE__*/React__default['default'].createElement("li", {
        key: 'potitle-' + name,
        className: 'point c' + _i2 % 4
      }, "point.", /*#__PURE__*/React__default['default'].createElement("b", null, name), /*#__PURE__*/React__default['default'].createElement(IconButton__default['default'], {
        size: "small",
        onClick: function onClick() {
          return console.log("parts.".concat(part, ".points.").concat(name, ":"), point);
        }
      }, /*#__PURE__*/React__default['default'].createElement(CameraIcon__default['default'], null)), /*#__PURE__*/React__default['default'].createElement("ul", {
        key: 'pdata-' + name
      }, /*#__PURE__*/React__default['default'].createElement("li", null, /*#__PURE__*/React__default['default'].createElement("b", null, "x"), ": ", round(point.x)), /*#__PURE__*/React__default['default'].createElement("li", null, /*#__PURE__*/React__default['default'].createElement("b", null, "y"), ": ", round(point.y)), point.attributes.length > 0 && /*#__PURE__*/React__default['default'].createElement("li", null, /*#__PURE__*/React__default['default'].createElement("b", null, "attributes"), ": ", renderAttributes(point.attributes)))));
    };

    for (var _i2 in props.focus[part].points) {
      _loop3(_i2);
    }

    info.push( /*#__PURE__*/React__default['default'].createElement("li", {
      key: 'part-' + part
    }, "parts.", /*#__PURE__*/React__default['default'].createElement("b", null, part), /*#__PURE__*/React__default['default'].createElement(IconButton__default['default'], {
      onClick: function onClick() {
        return props.raiseEvent('part', part);
      }
    }, /*#__PURE__*/React__default['default'].createElement(IsolateIcon__default['default'], null)), points.length > 0 && /*#__PURE__*/React__default['default'].createElement("ul", null, points), paths.length > 0 && /*#__PURE__*/React__default['default'].createElement("ul", null, paths)));
  };

  for (var _i = 0, _Object$keys = Object.keys(props.focus); _i < _Object$keys.length; _i++) {
    _loop();
  }

  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: "design"
  }, /*#__PURE__*/React__default['default'].createElement("ul", null, info));
};

var PurpleSwitch = styles.withStyles({
  switchBase: {
    color: '#868e96',
    '&$checked': {
      color: '#845ef7'
    },
    '&$checked + $track': {
      backgroundColor: '#9775fa'
    }
  },
  checked: {},
  track: {
    backgroundColor: '#868e96'
  }
})(Switch__default['default']);

var Example = function Example(_ref) {
  var _ref$pattern = _ref.pattern,
      pattern = _ref$pattern === void 0 ? 'examples' : _ref$pattern;
      _ref.design;
      var _ref$caption = _ref.caption,
      caption = _ref$caption === void 0 ? '' : _ref$caption,
      _ref$children = _ref.children,
      children = _ref$children === void 0 ? null : _ref$children,
      _ref$options = _ref.options,
      options = _ref$options === void 0 ? {} : _ref$options,
      settings = _ref.settings,
      _ref$part = _ref.part,
      part = _ref$part === void 0 ? '' : _ref$part,
      sample = _ref.sample;

  var _useState = React.useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      designMode = _useState2[0],
      setDesignMode = _useState2[1];

  var _useState3 = React.useState(null),
      _useState4 = _slicedToArray(_useState3, 2),
      focus = _useState4[0],
      setFocus = _useState4[1];

  if (caption) console.log('Passing the caption prop to @freesewing/components/Example is deprecated. See: https://github.com/freesewing/freesewing/issues/1043');

  var raiseEvent = function raiseEvent(type, data) {
    if (type === 'clearFocusAll') return setFocus(null);
    var f = {};
    if (focus !== null) f = _objectSpread2({}, focus);
    if (typeof f[data.part] === 'undefined') f[data.part] = {
      paths: [],
      points: [],
      coords: []
    };
    if (type === 'point') f[data.part].points.push(data.name);else if (type === 'path') f[data.part].paths.push(data.name);else if (type === 'coords') f[data.part].coords.push(data.coords);else if (type === 'clearFocus') {
      var i = focus[data.part][data.type].indexOf(data.name);
      f[data.part][data.type].splice(i, 1);
    }
    setFocus(f);
  };

  if (focus !== null) {
    for (var _i = 0, _Object$keys = Object.keys(focus); _i < _Object$keys.length; _i++) {
      var p = _Object$keys[_i];

      for (var i in focus[p].points) {
      }

      for (var _i2 in focus[p].paths) {
      }

      for (var _i3 in focus[p].coords) {
      }
    }
  }

  var patterns = {
    examples: examples__default['default'],
    rendertest: rendertest__default['default'],
    tutorial: tutorial__default['default']
  };
  settings = _objectSpread2({
    options: _objectSpread2({}, options),
    measurements: {
      head: 390
    }
  }, settings);
  if (part !== '') settings.only = [part];
  var patternInstance = new patterns[pattern](settings);
  if (sample) patternInstance.sample();else patternInstance.draft();
  var patternProps = patternInstance.getRenderProps();
  return /*#__PURE__*/React__default['default'].createElement("figure", {
    className: designMode ? 'design example' : 'example'
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: "example"
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: "actions"
  }, /*#__PURE__*/React__default['default'].createElement(IconButton__default['default'], {
    disabled: !designMode,
    color: "primary",
    onClick: function onClick() {
      return raiseEvent('clearFocusAll', null);
    }
  }, /*#__PURE__*/React__default['default'].createElement(ResetIcon__default['default'], null)), /*#__PURE__*/React__default['default'].createElement(PurpleSwitch, {
    checked: designMode,
    onChange: function onChange() {
      return setDesignMode(!designMode);
    },
    value: designMode,
    color: "primary",
    className: "switch-accent"
  })), /*#__PURE__*/React__default['default'].createElement(Draft, _extends({}, patternProps, {
    design: designMode,
    focus: focus,
    raiseEvent: raiseEvent
  }))), /*#__PURE__*/React__default['default'].createElement("figcaption", null, caption || children), designMode && /*#__PURE__*/React__default['default'].createElement("div", {
    className: "design"
  }, /*#__PURE__*/React__default['default'].createElement(Design, {
    focus: focus,
    design: designMode,
    raiseEvent: raiseEvent,
    parts: patternProps.parts
  })));
};

module.exports = Example;
//# sourceMappingURL=index.js.map
