/**
 * @freesewing/components | v2.17.0
 * A collection of React components for FreeSewing web UIs
 * (c) 2021 Joost De Cock <joost@joost.at> (https://github.com/joostdecock)
 * @license MIT
 */
'use strict';

var React = require('react');
var storage = require('@freesewing/utils/storage');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var storage__default = /*#__PURE__*/_interopDefaultLegacy(storage);

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _possibleConstructorReturn(self, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}

var withGist = function withGist(WrappedComponent) {
  var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
    gist: {},
    store: false
  };
  return /*#__PURE__*/function (_React$Component) {
    _inherits(_class, _React$Component);

    var _super = _createSuper(_class);

    function _class(props) {
      var _this;

      _classCallCheck(this, _class);

      _this = _super.call(this, props);
      _this.setGist = _this.setGist.bind(_assertThisInitialized(_this));
      _this.importGist = _this.importGist.bind(_assertThisInitialized(_this));
      _this.updateGist = _this.updateGist.bind(_assertThisInitialized(_this));
      _this.state = {
        gist: settings.gist || {}
      };
      return _this;
    }

    _createClass(_class, [{
      key: "setGist",
      value: function setGist(gist) {
        this.setState({
          gist: gist
        });
        if (settings.store) storage__default['default'].set(this.state.gist.name || "gist", gist);
      }
    }, {
      key: "importGist",
      value: function importGist(gist) {
        if (typeof this.state.gist.settings === "undefined") this.updateGist({}, "settings");
        if (typeof this.state.gist.settings.options === "undefined") this.updateGist({}, "settings", "options");

        if (typeof gist.settings !== "undefined") {
          // Load settings
          for (var _i = 0, _Object$keys = Object.keys(gist.settings); _i < _Object$keys.length; _i++) {
            var key = _Object$keys[_i];
            if (key !== "options") this.updateGist(gist.settings[key], "settings", key);
          }

          if (typeof gist.settings.options !== "undefined") {
            // Load options
            for (var _i2 = 0, _Object$keys2 = Object.keys(gist.settings.options); _i2 < _Object$keys2.length; _i2++) {
              var _key = _Object$keys2[_i2];
              this.updateGist(gist.settings.options[_key], "settings", "options", _key);
            }
          }
        } // Load root level keys


        for (var _i3 = 0, _Object$keys3 = Object.keys(gist); _i3 < _Object$keys3.length; _i3++) {
          var _key2 = _Object$keys3[_i3];
          if (_key2 !== "settings") this.updateGist(gist[_key2], _key2);
        }
      }
    }, {
      key: "updateGist",
      value: function updateGist(value) {
        var l1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
        var l2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
        var l3 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
        if (!l1) return;
        var gist = this.state.gist;
        if (l2 && typeof gist[l1] === "undefined") gist[l1] = {};
        if (l3 && typeof gist[l1][l2] === "undefined") gist[l1][l2] = {};
        if (l3) gist[l1][l2][l3] = value;else if (l2) gist[l1][l2] = value;else gist[l1] = value;
        this.setState({
          gist: gist
        });
        if (settings.store) storage__default['default'].set(this.state.gist.name || "gist", gist);
      }
    }, {
      key: "render",
      value: function render() {
        return /*#__PURE__*/React__default['default'].createElement(WrappedComponent, _extends({
          gist: this.state.gist,
          importGist: this.importGist,
          updateGist: this.updateGist
        }, this.props));
      }
    }]);

    return _class;
  }(React__default['default'].Component);
};

module.exports = withGist;
//# sourceMappingURL=index.js.map
