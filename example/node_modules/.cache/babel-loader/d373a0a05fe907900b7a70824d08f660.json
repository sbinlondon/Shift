{"ast":null,"code":"export default function (part) {\n  var _part$shorthand = part.shorthand(),\n      options = _part$shorthand.options,\n      Point = _part$shorthand.Point,\n      Path = _part$shorthand.Path,\n      points = _part$shorthand.points,\n      paths = _part$shorthand.paths,\n      Snippet = _part$shorthand.Snippet,\n      snippets = _part$shorthand.snippets,\n      complete = _part$shorthand.complete,\n      sa = _part$shorthand.sa,\n      paperless = _part$shorthand.paperless,\n      macro = _part$shorthand.macro;\n\n  var w = 500 * options.size;\n  points.topLeft = new Point(0, 0);\n  points.topRight = new Point(w, 0);\n  points.bottomLeft = new Point(0, w / 2);\n  points.bottomRight = new Point(w, w / 2);\n  paths.seam = new Path().move(points.topLeft).line(points.bottomLeft).line(points.bottomRight).line(points.topRight).line(points.topLeft).close().attr('class', 'fabric'); // Complete?\n\n  if (complete) {\n    points.logo = points.topLeft.shiftFractionTowards(points.bottomRight, 0.5);\n    snippets.logo = new Snippet('logo', points.logo);\n    points.text = points.logo.shift(-90, w / 8).attr('data-text', 'hello').attr('data-text-class', 'center');\n\n    if (sa) {\n      paths.sa = paths.seam.offset(sa).attr('class', 'fabric sa');\n    }\n  } // Paperless?\n\n\n  if (paperless) {\n    macro('hd', {\n      from: points.bottomLeft,\n      to: points.bottomRight,\n      y: points.bottomLeft.y + sa + 15\n    });\n    macro('vd', {\n      from: points.bottomRight,\n      to: points.topRight,\n      x: points.topRight.x + sa + 15\n    });\n  }\n\n  return part;\n}","map":{"version":3,"sources":["F:/Documents/Freesewing Patterns/18shift/src/box.js"],"names":["part","shorthand","options","Point","Path","points","paths","Snippet","snippets","complete","sa","paperless","macro","w","size","topLeft","topRight","bottomLeft","bottomRight","seam","move","line","close","attr","logo","shiftFractionTowards","text","shift","offset","from","to","y","x"],"mappings":"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","sourcesContent":["export default function (part) {\n  const {\n    options,\n    Point,\n    Path,\n    points,\n    paths,\n    Snippet,\n    snippets,\n    complete,\n    sa,\n    paperless,\n    macro\n  } = part.shorthand()\n\n  const w = 500 * options.size\n  points.topLeft = new Point(0, 0)\n  points.topRight = new Point(w, 0)\n  points.bottomLeft = new Point(0, w / 2)\n  points.bottomRight = new Point(w, w / 2)\n\n  paths.seam = new Path()\n    .move(points.topLeft)\n    .line(points.bottomLeft)\n    .line(points.bottomRight)\n    .line(points.topRight)\n    .line(points.topLeft)\n    .close()\n    .attr('class', 'fabric')\n\n  // Complete?\n  if (complete) {\n    points.logo = points.topLeft.shiftFractionTowards(points.bottomRight, 0.5)\n    snippets.logo = new Snippet('logo', points.logo)\n    points.text = points.logo\n      .shift(-90, w / 8)\n      .attr('data-text', 'hello')\n      .attr('data-text-class', 'center')\n\n    if (sa) {\n      paths.sa = paths.seam.offset(sa).attr('class', 'fabric sa')\n    }\n  }\n\n  // Paperless?\n  if (paperless) {\n    macro('hd', {\n      from: points.bottomLeft,\n      to: points.bottomRight,\n      y: points.bottomLeft.y + sa + 15\n    })\n    macro('vd', {\n      from: points.bottomRight,\n      to: points.topRight,\n      x: points.topRight.x + sa + 15\n    })\n  }\n\n  return part\n}\n"]},"metadata":{},"sourceType":"module"}