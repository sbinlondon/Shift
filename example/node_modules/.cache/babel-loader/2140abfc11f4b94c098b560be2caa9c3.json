{"ast":null,"code":"export default function (part) {\n  var _part$shorthand = part.shorthand(),\n      options = _part$shorthand.options,\n      Point = _part$shorthand.Point,\n      Path = _part$shorthand.Path,\n      points = _part$shorthand.points,\n      paths = _part$shorthand.paths,\n      Snippet = _part$shorthand.Snippet,\n      snippets = _part$shorthand.snippets,\n      complete = _part$shorthand.complete,\n      sa = _part$shorthand.sa,\n      paperless = _part$shorthand.paperless,\n      macro = _part$shorthand.macro;\n\n  points.bodyTopLeft = new Point(0, 0);\n  points.bodyTopRight = new Point(0, measurements.hips); //const w = 500 * options.size\n  // points.topLeft = new Point(0, 0)\n  //points.topRight = new Point(w, 0)\n  // points.bottomLeft = new Point(0, w / 2)\n  // points.bottomRight = new Point(w, w / 2)\n  // paths.seam = new Path()\n  //.move(points.topLeft)\n  //.line(points.bottomLeft)\n  // .line(points.bottomRight)\n  //.line(points.topRight)\n  //.line(points.topLeft)\n  //.close()\n  //.attr('class', 'fabric')\n  // Complete?\n\n  if (complete) {\n    points.logo = points.topLeft.shiftFractionTowards(points.bottomRight, 0.5);\n    snippets.logo = new Snippet('logo', points.logo);\n    points.text = points.logo.shift(-90, w / 8).attr('data-text', 'hello').attr('data-text-class', 'center');\n\n    if (sa) {\n      paths.sa = paths.seam.offset(sa).attr('class', 'fabric sa');\n    }\n  } // Paperless?\n\n\n  if (paperless) {\n    macro('hd', {\n      from: points.bottomLeft,\n      to: points.bottomRight,\n      y: points.bottomLeft.y + sa + 15\n    });\n    macro('vd', {\n      from: points.bottomRight,\n      to: points.topRight,\n      x: points.topRight.x + sa + 15\n    });\n  }\n\n  return part;\n}","map":{"version":3,"sources":["F:/Documents/Freesewing Patterns/18shift/src/body.js"],"names":["part","shorthand","options","Point","Path","points","paths","Snippet","snippets","complete","sa","paperless","macro","bodyTopLeft","bodyTopRight","measurements","hips","logo","topLeft","shiftFractionTowards","bottomRight","text","shift","w","attr","seam","offset","from","bottomLeft","to","y","topRight","x"],"mappings":"AAAA,eAAe,UAAUA,IAAV,EAAgB;AAC7B,wBAYIA,IAAI,CAACC,SAAL,EAZJ;AAAA,MACEC,OADF,mBACEA,OADF;AAAA,MAEEC,KAFF,mBAEEA,KAFF;AAAA,MAGEC,IAHF,mBAGEA,IAHF;AAAA,MAIEC,MAJF,mBAIEA,MAJF;AAAA,MAKEC,KALF,mBAKEA,KALF;AAAA,MAMEC,OANF,mBAMEA,OANF;AAAA,MAOEC,QAPF,mBAOEA,QAPF;AAAA,MAQEC,QARF,mBAQEA,QARF;AAAA,MASEC,EATF,mBASEA,EATF;AAAA,MAUEC,SAVF,mBAUEA,SAVF;AAAA,MAWEC,KAXF,mBAWEA,KAXF;;AAcAP,EAAAA,MAAM,CAACQ,WAAP,GAAqB,IAAIV,KAAJ,CAAU,CAAV,EAAY,CAAZ,CAArB;AACAE,EAAAA,MAAM,CAACS,YAAP,GAAsB,IAAIX,KAAJ,CAAU,CAAV,EAAaY,YAAY,CAACC,IAA1B,CAAtB,CAhB6B,CAkB7B;AACD;AACC;AACD;AACA;AAEA;AACG;AACA;AACD;AACC;AACA;AACA;AACA;AAEF;;AACA,MAAIP,QAAJ,EAAc;AACZJ,IAAAA,MAAM,CAACY,IAAP,GAAcZ,MAAM,CAACa,OAAP,CAAeC,oBAAf,CAAoCd,MAAM,CAACe,WAA3C,EAAwD,GAAxD,CAAd;AACAZ,IAAAA,QAAQ,CAACS,IAAT,GAAgB,IAAIV,OAAJ,CAAY,MAAZ,EAAoBF,MAAM,CAACY,IAA3B,CAAhB;AACAZ,IAAAA,MAAM,CAACgB,IAAP,GAAchB,MAAM,CAACY,IAAP,CACXK,KADW,CACL,CAAC,EADI,EACAC,CAAC,GAAG,CADJ,EAEXC,IAFW,CAEN,WAFM,EAEO,OAFP,EAGXA,IAHW,CAGN,iBAHM,EAGa,QAHb,CAAd;;AAKA,QAAId,EAAJ,EAAQ;AACNJ,MAAAA,KAAK,CAACI,EAAN,GAAWJ,KAAK,CAACmB,IAAN,CAAWC,MAAX,CAAkBhB,EAAlB,EAAsBc,IAAtB,CAA2B,OAA3B,EAAoC,WAApC,CAAX;AACD;AACF,GA7C4B,CA+C7B;;;AACA,MAAIb,SAAJ,EAAe;AACbC,IAAAA,KAAK,CAAC,IAAD,EAAO;AACVe,MAAAA,IAAI,EAAEtB,MAAM,CAACuB,UADH;AAEVC,MAAAA,EAAE,EAAExB,MAAM,CAACe,WAFD;AAGVU,MAAAA,CAAC,EAAEzB,MAAM,CAACuB,UAAP,CAAkBE,CAAlB,GAAsBpB,EAAtB,GAA2B;AAHpB,KAAP,CAAL;AAKAE,IAAAA,KAAK,CAAC,IAAD,EAAO;AACVe,MAAAA,IAAI,EAAEtB,MAAM,CAACe,WADH;AAEVS,MAAAA,EAAE,EAAExB,MAAM,CAAC0B,QAFD;AAGVC,MAAAA,CAAC,EAAE3B,MAAM,CAAC0B,QAAP,CAAgBC,CAAhB,GAAoBtB,EAApB,GAAyB;AAHlB,KAAP,CAAL;AAKD;;AAED,SAAOV,IAAP;AACD","sourcesContent":["export default function (part) {\n  const {\n    options,\n    Point,\n    Path,\n    points,\n    paths,\n    Snippet,\n    snippets,\n    complete,\n    sa,\n    paperless,\n    macro\n  } = part.shorthand()\n\n  points.bodyTopLeft = new Point(0,0)\n  points.bodyTopRight = new Point(0, measurements.hips)\n\n  //const w = 500 * options.size\n // points.topLeft = new Point(0, 0)\n  //points.topRight = new Point(w, 0)\n // points.bottomLeft = new Point(0, w / 2)\n // points.bottomRight = new Point(w, w / 2)\n\n // paths.seam = new Path()\n    //.move(points.topLeft)\n    //.line(points.bottomLeft)\n   // .line(points.bottomRight)\n    //.line(points.topRight)\n    //.line(points.topLeft)\n    //.close()\n    //.attr('class', 'fabric')\n\n  // Complete?\n  if (complete) {\n    points.logo = points.topLeft.shiftFractionTowards(points.bottomRight, 0.5)\n    snippets.logo = new Snippet('logo', points.logo)\n    points.text = points.logo\n      .shift(-90, w / 8)\n      .attr('data-text', 'hello')\n      .attr('data-text-class', 'center')\n\n    if (sa) {\n      paths.sa = paths.seam.offset(sa).attr('class', 'fabric sa')\n    }\n  }\n\n  // Paperless?\n  if (paperless) {\n    macro('hd', {\n      from: points.bottomLeft,\n      to: points.bottomRight,\n      y: points.bottomLeft.y + sa + 15\n    })\n    macro('vd', {\n      from: points.bottomRight,\n      to: points.topRight,\n      x: points.topRight.x + sa + 15\n    })\n  }\n\n  return part\n}\n"]},"metadata":{},"sourceType":"module"}