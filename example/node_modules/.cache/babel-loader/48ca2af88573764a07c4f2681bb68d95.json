{"ast":null,"code":"var optionType = function optionType(option) {\n  if (typeof option === \"object\") {\n    if (typeof option.pct !== \"undefined\") return \"pct\";\n    if (typeof option.mm !== \"undefined\") return \"mm\";\n    if (typeof option.deg !== \"undefined\") return \"deg\";\n    if (typeof option.count !== \"undefined\") return \"count\";\n    if (typeof option.bool !== \"undefined\") return \"bool\";\n    if (typeof option.list !== \"undefined\") return \"list\";\n    return \"unknown\";\n  }\n\n  return \"constant\";\n};\n\nvar optionDefault = function optionDefault(name, option, recipe) {\n  var type = optionType(option); // Default from recipe?\n\n  var fromRecipe = false;\n  if (recipe && typeof recipe.settings !== 'undefined' && typeof recipe.settings.options !== 'undefined' && typeof recipe.settings.options[name] !== 'undefined') fromRecipe = true;\n\n  switch (type) {\n    case 'constant':\n      return option;\n\n    case 'list':\n      if (fromRecipe) return recipe.settings.options[name];\n      return option.dflt;\n\n    default:\n      var factor = type === 'pct' ? 100 : 1;\n      if (fromRecipe) return Math.round(10 * recipe.settings.options[name] * factor) / 10;else return option[type];\n  }\n};\n\nexport default optionDefault;","map":{"version":3,"sources":["../src/optionType/index.js","../src/optionDefault/index.js"],"names":["optionType","option","optionDefault","type","fromRecipe","recipe","factor","Math"],"mappings":"AAAA,IAAMA,UAAU,GAAGC,SAAbD,UAAaC,CAAAA,MAAM,EAAI;AAC3B,MAAI,OAAA,MAAA,KAAJ,QAAA,EAAgC;AAC9B,QAAI,OAAOA,MAAM,CAAb,GAAA,KAAJ,WAAA,EAAuC,OAAA,KAAA;AACvC,QAAI,OAAOA,MAAM,CAAb,EAAA,KAAJ,WAAA,EAAsC,OAAA,IAAA;AACtC,QAAI,OAAOA,MAAM,CAAb,GAAA,KAAJ,WAAA,EAAuC,OAAA,KAAA;AACvC,QAAI,OAAOA,MAAM,CAAb,KAAA,KAAJ,WAAA,EAAyC,OAAA,OAAA;AACzC,QAAI,OAAOA,MAAM,CAAb,IAAA,KAAJ,WAAA,EAAwC,OAAA,MAAA;AACxC,QAAI,OAAOA,MAAM,CAAb,IAAA,KAAJ,WAAA,EAAwC,OAAA,MAAA;AACxC,WAAA,SAAA;AACD;;AAED,SAAA,UAAA;AAXF,CAAA;;ICEMC,aAAa,GAAG,SAAhBA,aAAgB,CAAA,IAAA,EAAA,MAAA,EAAA,MAAA,EAA0B;AAC9C,MAAIC,IAAI,GAAGH,UAAU,CADyB,MACzB,CAArB,CAD8C,CAAA;;AAG9C,MAAII,UAAU,GAAd,KAAA;AACA,MACEC,MAAM,IACN,OAAOA,MAAM,CAAb,QAAA,KADAA,WAAAA,IAEA,OAAOA,MAAM,CAANA,QAAAA,CAAP,OAAA,KAFAA,WAAAA,IAGA,OAAOA,MAAM,CAANA,QAAAA,CAAAA,OAAAA,CAAP,IAAOA,CAAP,KAJF,WAAA,EAMED,UAAU,GAAVA,IAAAA;;AAEF,UAAA,IAAA;AACE,SAAA,UAAA;AACE,aAAA,MAAA;;AAEF,SAAA,MAAA;AACE,UAAA,UAAA,EAAgB,OAAOC,MAAM,CAANA,QAAAA,CAAAA,OAAAA,CAAP,IAAOA,CAAP;AAChB,aAAOJ,MAAM,CAAb,IAAA;;AAEF;AACE,UAAIK,MAAM,GAAGH,IAAI,KAAJA,KAAAA,GAAAA,GAAAA,GAAb,CAAA;AACA,UAAA,UAAA,EAAgB,OAAOI,IAAI,CAAJA,KAAAA,CAAW,KAAKF,MAAM,CAANA,QAAAA,CAAAA,OAAAA,CAAL,IAAKA,CAAL,GAAXE,MAAAA,IAAvB,EAAgB,CAAhB,KACK,OAAON,MAAM,CAAb,IAAa,CAAb;AAXT;AAcD,C","sourcesContent":["const optionType = option => {\n  if (typeof option === \"object\") {\n    if (typeof option.pct !== \"undefined\") return \"pct\";\n    if (typeof option.mm !== \"undefined\") return \"mm\";\n    if (typeof option.deg !== \"undefined\") return \"deg\";\n    if (typeof option.count !== \"undefined\") return \"count\";\n    if (typeof option.bool !== \"undefined\") return \"bool\";\n    if (typeof option.list !== \"undefined\") return \"list\";\n    return \"unknown\";\n  }\n\n  return \"constant\";\n};\n\nexport default optionType;\n","import optionType from '../optionType'\n\nconst optionDefault = (name, option, recipe) => {\n  let type = optionType(option)\n  // Default from recipe?\n  let fromRecipe = false\n  if (\n    recipe &&\n    typeof recipe.settings !== 'undefined' &&\n    typeof recipe.settings.options !== 'undefined' &&\n    typeof recipe.settings.options[name] !== 'undefined'\n  )\n    fromRecipe = true\n\n  switch (type) {\n    case 'constant':\n      return option\n      break\n    case 'list':\n      if (fromRecipe) return recipe.settings.options[name]\n      return option.dflt\n      break\n    default:\n      let factor = type === 'pct' ? 100 : 1\n      if (fromRecipe) return Math.round(10 * recipe.settings.options[name] * factor) / 10\n      else return option[type]\n      break\n  }\n}\n\nexport default optionDefault\n"]},"metadata":{},"sourceType":"module"}